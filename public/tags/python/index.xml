<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python - Tag - cuffaro.com</title>
        <link>https://cuffaro.com/tags/python/</link>
        <description>python - Tag - cuffaro.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>m@cuffaro.com (mike)</managingEditor>
            <webMaster>m@cuffaro.com (mike)</webMaster><copyright>Â© {year}</copyright><lastBuildDate>Sun, 22 Sep 2019 20:44:43 &#43;0200</lastBuildDate><atom:link href="https://cuffaro.com/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>Easy workflow for switching Python virtual environments</title>
    <link>https://cuffaro.com/2019-09-22-zsh-jump-workon/</link>
    <pubDate>Sun, 22 Sep 2019 20:44:43 &#43;0200</pubDate>
    <author>mike</author>
    <guid>https://cuffaro.com/2019-09-22-zsh-jump-workon/</guid>
    <description><![CDATA[The problem I set out to solve was simply to avoid manually typing pyenv/venv commands when moving into directories containing different projects, and around my directory tree.
If you are like me, you would be working on different things at different times, and switching projects around seamlessly becomes a requirement to avoid waste of time, attention and context.
My environment For the sake of clarity, I am using a Macbook Pro with macOS Mojave, and I have iTerm2 set up with ZSH and oh-my-zsh as my shell.]]></description>
</item>
<item>
    <title>Making pyenv and neovim play nice (and a few gotchas found along the way)</title>
    <link>https://cuffaro.com/2018-04-16-pyenv-neovim/</link>
    <pubDate>Mon, 16 Apr 2018 19:37:10 &#43;0200</pubDate>
    <author>mike</author>
    <guid>https://cuffaro.com/2018-04-16-pyenv-neovim/</guid>
    <description><![CDATA[For my development workflow and IDE, I&rsquo;ve recently decided to move from Vim, to NeoVim, which is essentially Vim on steroids.
No, but seriously, NeoVim has a few features that are really interesting, but the real reason for moving is that, as a Python dev, I need to be able to look at source code and definitions very often, while hacking on my code. The wonderful jedi-vim plugin normally allows me to do just that, when it comes to my local project.]]></description>
</item>
</channel>
</rss>
